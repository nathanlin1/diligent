#
# CSE186 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE186 Assignment 8 Backend
  version: 0.2.0
  title: CSE186 Assignment 8 Backend

servers:
  - url: http://localhost:3010/api/v0

paths:
  /users/email/{email}:
    get:
      summary: Get user ID by email
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: User ID retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
        '404':
          description: User not found
          
  /login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /workspaces:
    get:
      summary: Get all workspaces for the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of workspaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
        "401":
          description: Unauthorized - Invalid or missing token
    post:
      summary: Create a new workspace
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Workspace created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        "400":
          description: Invalid request - missing or invalid name/description
        '401':
          description: Unauthorized

  /workspaces/{workspaceId}/channels:
    get:
      summary: Get all channels in a workspace
      security:
        - bearerAuth: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A list of channels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: Workspace not found
    post:
      summary: Create a new channel in a workspace
      security:
        - bearerAuth: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Channel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '400':
          description: Invalid request - missing or invalid name/description
        '401':
          description: Unauthorized
        '404':
          description: Workspace not found

  /channels/{channelId}/messages:
    get:
      summary: Get all messages in a channel
      security:
        - bearerAuth: []
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A list of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageWithOwner'
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: Channel not found
    post:
      summary: Create a new message in a channel
      security:
        - bearerAuth: []
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Message created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request - missing or invalid content
        '401':
          description: Unauthorized
        '404':
          description: Channel not found

  /messages/{messageId}:
    delete:
      summary: Delete a message
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Message deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Message not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Workspace:
      type: object
      properties:
        id:
          type: string
          format: uuid
        owner_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
      required:
        - id
    Channel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        workspace_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
          required:
            - name
      required:
        - id
        - workspace_id
        - data
    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
        channel_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            content:
              type: string
            timestamp:
              type: string
              format: date-time
          required:
            - content
            - timestamp
      required:
        - id
        - channel_id
        - user_id
        - data
    MessageWithOwner:
      type: object
      properties:
        id:
          type: string
          format: uuid
        channel_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            content:
              type: string
            timestamp:
              type: string
              format: date-time
            owner_name:
              type: string
          required:
            - content
            - timestamp
            - owner_name
      required:
        - id
        - channel_id
        - user_id
        - data
